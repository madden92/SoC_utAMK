------------------------------------
-- Внешние функции к Monnoroch's AI modification
-- Created by Monnoroch 
-- 15.07.09
------------------------------------

function load_schemes()
	if mon_sleep then
		load_scheme("mon_sleep","sleep",stype_stalker)
	end
	--if mon_look then
	--	load_scheme("mon_look","look",stype_stalker)
	--end
	if mon_psyh then
		load_scheme("mon_psyh","psyh",stype_stalker)
	end
	if mon_suicid and amk and amk_mod then
		load_scheme("mon_suicid","suicid",stype_stalker)
	end
	if mon_knife then
		load_scheme("mon_knife","knife",stype_stalker)
	end
	if mon_hunter_heli then
		--load_scheme("mon_hunter_heli","hunter_heli",stype_stalker)
	end
	if mon_trade then
		load_scheme("mon_trade","trade",stype_stalker)
	end
	if mon_drink then
		load_scheme("mon_drink","drink",stype_stalker)
	end
	if mon_findart then
		load_scheme("mon_findart","findart",stype_stalker)
	end
	if mon_lamp then
		load_scheme("mon_lamp","lamp",stype_stalker)
	end
	--if mon_angry_npc then
		--load_scheme("mon_angry_npc","angry_npc",stype_stalker)
	--end
end

function disable_schemes(npc)
end

function enable_schemes(ini,npc)
	if mon_sleep then
		mon_sleep.set_scheme(npc,ini,"sleep","sleep")
	end
	--if mon_look then
	--	mon_look.set_scheme(npc,ini,"look","look")
	--end
	if mon_psyh then
		mon_psyh.set_scheme(npc,ini,"psyh","psyh")
	end
	if mon_suicid and amk and amk_mod then
		mon_suicid.set_scheme(npc,ini,"suicid","suicid")
	end
	if mon_knife then
		mon_knife.set_scheme(npc,ini,"knife","knife")
	end
	if mon_hunter_heli then
		--mon_hunter_heli.set_scheme(npc,ini,"hunter_heli","hunter_heli")
	end
	if mon_trade then
		mon_trade.set_scheme(npc,ini,"trade","trade")
	end
	if mon_drink then
		mon_drink.set_scheme(npc,ini,"drink","drink")
	end
	if mon_findart then
		mon_findart.set_scheme(npc,ini,"findart","findart")
	end
	if mon_lamp then
		mon_lamp.set_scheme(npc,ini,"lamp","lamp")
	end
	--if mon_angry_npc then
		--mon_angry_npc.set_scheme(npc,ini,"angry_npc","angry_npc")
	--end
end

function addCommonPrecondition(action)
	if mon_sleep then
		action:add_precondition(world_property(mon_sleep.evid_sleep,false))
	end
	--if mon_look then
	--	action:add_precondition(world_property(mon_look.evid_look,false))
	--end
	if mon_psyh then
		action:add_precondition(world_property(mon_psyh.evid_psyh,false))
	end
	if mon_suicid and amk and amk_mod then
		action:add_precondition(world_property(mon_suicid.evid_suicid,false))
	end
	if mon_knife then
		action:add_precondition(world_property(mon_knife.evid_knife,false))
	end
	--if mon_hunter_heli then
		--action:add_precondition(world_property(mon_hunter_heli.evid_hunter_heli,false))
	--end
	if mon_trade then
		action:add_precondition(world_property(mon_trade.evid_trade,false))
	end
	if mon_drink then
		action:add_precondition(world_property(mon_drink.evid_drink,false))
	end
	if mon_findart then
		action:add_precondition(world_property(mon_findart.evid_findart,false))
	end
	if mon_lamp then
		action:add_precondition(world_property(mon_lamp.evid_lamp,false))
	end
	--if angry_npc then
		--action:add_precondition(world_property(mon_angry_npc.evid_angry_npc,false))
	--end
end

evid_mon_base = 18826
actid_mon_base = evid_mon_base

function issue_event(npc,name,...)
	local st = db.storage[npc:id()]
	if not st or not st.mon_callbacks then
		return
	end
	for k,v in pairs(st.mon_callbacks) do
		if v and k[name] then
			k[name](k,...)
		end
	end
end

function subscribe_for_events(npc,obj)
	local st = db.storage[npc:id()]
	if not st.mon_callbacks then
		st.mon_callbacks = {}
	end
	st.mon_callbacks[obj] = true
end

function unsubscribe_from_events(npc,obj)
	local st = npc and db.storage[npc:id()]
	if st and st.mon_callbacks then
		if obj then
			st.mon_callbacks[obj] = nil
		else
			st.mon_callbacks = nil
		end
	end
end

function npc_death(npc,who)
	if npc then
		issue_event(npc,"death_callback",who)
		--if (who:id() == db.actor:id()) and db.actor:relation(npc) ~= game_object.enemy then
			--mon_angry_npc.evaluator_angry_npc:on_death_by_actor(npc)
		--end
	end
end

function npc_hit(npc,amount,dir,who,bone_id)
	if npc and amount ~= 0 then
		issue_event(npc,"hit_callback",amount,dir,who,bone_id)
	end
end